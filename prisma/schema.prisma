generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STAFF
  ADMIN
}

enum Event {
  PRODUCTION
  INPUT
}

model User {
  name        String        @id
  password    String
  level       Role          @default(STAFF)
  Transaction Transaction[]
}

model Warehouse {
  location  String      @id
  Inventory Inventory[]
  History   History[]
}

model Product {
  name      String      @id
  stock     Int
  Needs     BOM[]       @relation("product")
  UsedBy    BOM[]       @relation("materials")
  Inventory Inventory[]
  History   History[]
}

model BOM {
  Product      Product @relation("product", fields: [productName], references: [name], onDelete: Cascade)
  productName  String
  Material     Product @relation("materials", fields: [materialName], references: [name], onDelete: Cascade)
  materialName String
  quantity     Int

  @@id([productName, materialName])
}

model Transaction {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  event     Event
  user      User      @relation(fields: [username], references: [name], onDelete: Cascade)
  username  String
  History   History[]
}

model History {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId Int
  Product       Product     @relation(fields: [productId], references: [name], onDelete: Cascade)
  productId     String
  Warehouse     Warehouse   @relation(fields: [warehouseId], references: [location], onDelete: Cascade)
  warehouseId   String
  quantity      Int
}

model Inventory {
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product   @relation(fields: [productId], references: [name], onDelete: Cascade)
  productId   String
  Warehouse   Warehouse @relation(fields: [warehouseId], references: [location], onDelete: Cascade)
  warehouseId String
  quantity    Int

  @@id([productId, warehouseId])
}
