generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STAFF
  ADMIN
}

enum Event {
  PRODUCTION
  INPUT
}

model User {
  name     String    @id
  password String
  level    Role      @default(STAFF)
  History  History[]
}

model Warehouse {
  location  String      @id
  Inventory Inventory[]
}

model Product {
  name      String      @id
  stock     Int
  Needs     BOM[]       @relation("product")
  UsedBy    BOM[]       @relation("materials")
  Inventory Inventory[]

  @@index([name])
}

model BOM {
  product      Product @relation("product", fields: [productName], references: [name], onDelete: Cascade)
  productName  String
  material     Product @relation("materials", fields: [materialName], references: [name], onDelete: Cascade)
  materialName String
  quantity     Int

  @@id([productName, materialName])
}

model History {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  event     Event
  user      User        @relation(fields: [userName], references: [name], onDelete: Cascade)
  userName  String
  Inventory Inventory[]
}

model Inventory {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  quantity    Int
  history     History   @relation(fields: [historyId], references: [id], onDelete: Cascade)
  historyId   Int
  product     Product   @relation(fields: [productId], references: [name], onDelete: Cascade)
  productId   String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [location], onDelete: Cascade)
  warehouseId String
}
