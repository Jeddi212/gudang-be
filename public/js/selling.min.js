function calculateSum() { var t = document.querySelectorAll('input[name="quantity[]"]'), e = 0; return t.forEach(t => { e += parseInt(t.value) || 0; }), e; } function updateMaxSell(t) { var e = t.selectedIndex, a = t.options[e].getAttribute("data-stock"); document.getElementById("product-quantity").setAttribute("max", a); } function updateMax() { document.querySelectorAll(".qty").forEach(t => { var e = t.selectedIndex, a = t.options[e].getAttribute("data-stock"), n = parseInt(document.getElementById("product-quantity").value, 10); t.nextElementSibling.setAttribute("max", Math.min(n, a)); }); } function validateQInput(t) { var e = parseInt(t.min), a = parseInt(t.max), n = parseInt(t.value); isNaN(n) || n < e ? t.value = e : n > a ? t.value = a : 0 === n && (t.value = e); } function validateQuantity() { var t = parseInt(document.getElementById("product-quantity").value, 10), e = calculateSum(), a = document.getElementById("ErrorMessage"); return e !== t ? (a.textContent = `Sum of quantities must be equal to ${t}. Current sum: ${e}`, !1) : (a.textContent = "", !0); } function removeSplit(t) { if (confirm("Are you sure you want to remove this item?")) { var e = t.parentElement; e.parentElement.removeChild(e); } } const collectForm = () => { let t = document.getElementById("event").value, e = Array.from(document.querySelectorAll(".inventory-item")).map(t => ({ product: t.querySelector('[name="product[]"]').value, warehouse: t.querySelector('[name="warehouse[]"]').value, quantity: Number(t.querySelector('[name="quantity[]"]').value) })); for (let a = 0; a < e.length; a++)e[a].quantity > 0 && (e[a].quantity = -e[a].quantity); return JSON.stringify({ event: t, inventory: e }); }; document.getElementById("jsonForm").addEventListener("submit", async t => { if (t.preventDefault(), !validateQuantity()) { alert("Some quantity are incorrect. Please check the quantities."); return; } let e = document.getElementById("result"); e.setAttribute("aria-busy", "true"); try { let a = collectForm(), n = t.target.action, r = await fetch(n, { method: "POST", headers: { "Content-Type": "application/json" }, body: a }); if (r.ok) { let u = await r.json(), i = u.data.transaction.id; window.location.href = `/transaction/${i}`; } else { let l = await r.text(); e.innerHTML = l; } } catch (o) { e.innerHTML = o; } e.setAttribute("aria-busy", "false"); });